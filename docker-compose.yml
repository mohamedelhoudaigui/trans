# TODO: need to add swagger, cadvisor integration with prometheus, as well as the backend integration for the grafana NodeJS APP Dashboard
# TODO: [URGENT] backend + frontend packaging.
# TODO: web serv D

# ======================================================================================
# VOLUMES
# ======================================================================================

volumes:
  backend:
    name: ${PROJECT_NAME}_backend_volume # add a volume names in env
    driver: local
    driver_opts:
      o: bind
      device: ./backend 
      type: none
  grafana:
    name: ${PROJECT_NAME}_grafana_volume
    driver: local
    driver_opts:
      o: bind
      device: ./devops/external-volumes/grafana
      type: none
  prometheus:
    name : ${PROJECT_NAME}_prometheus_volume
    driver: local
    driver_opts:
      o: bind
      device: ./devops/external-volumes/prometheus
      type: none

# ======================================================================================
# NETWORKS
# ======================================================================================

networks:
  backend:
    driver: bridge
  devops:
    driver: bridge

# ======================================================================================
# SERVICES
# ======================================================================================

services:



# ======================================================================================
# BACKEND
# ======================================================================================

  # backend:
  #   container_name: ${PROJECT_NAME}_backend
  #   build:
  #     context: ./backend
  #     dockerfile: dockerfile
  #   volumes:
  #     - ./backend:/app
  #   networks:
  #     - backend
  #   env_file:
  #   - .env
  #   ports:
  #     - "3000:3000"

# ======================================================================================
# MANAGEMENT
# ======================================================================================

  portainer:
    image: portainer/portainer-ce:latest
    container_name: ${PROJECT_NAME}_portainer
    volumes:
      - ${DOCKER_SOCK}:/var/run/docker.sock:ro
    networks:
      - devops
    ports:
      - "9000:9000"
    restart: unless-stopped

# ======================================================================================
# MONITORING && DASHBOARD
# ======================================================================================

  prometheus:
    container_name: ${PROJECT_NAME}_prometheus
    image: ubuntu/prometheus
    volumes:
      - ./devops/configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      # - ./devops/prometheus/alerts.yml:/etc/prometheus/alerts.yml
    networks:
      - devops
    ports:
      - "0.0.0.0:9090:9090"
    # command: 
    depends_on:
      portainer:
        condition: service_started

  grafana:
    container_name: ${PROJECT_NAME}_grafana
    image: grafana/grafana-oss 
    user: "0"
    volumes:
      - grafana:/var/lib/grafana
    networks:
      - devops
    ports:
      - "0.0.0.0:9091:3000"
    environment:
      - GF_SERVER_ROOT_URL=http://localhost/
      - GF_PLUGINS_PREINSTALL=grafana-clock-panel
      - GF_LOG_LEVEL=${LOG_LEVEL}
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASS:-admin}
    depends_on:
      prometheus:
        condition: service_started

# ======================================================================================
# DATABASE
# ======================================================================================


